{"version":3,"sources":["apis/articles.js","components/shared/search-form.js","components/feature/article.js","components/container/articles.js","App.js","reportWebVitals.js","index.js"],"names":["getArticlesRequested","a","axios","get","articles","data","SearchBar","props","role","onSubmit","e","preventDefault","className","type","name","placeholder","onChange","handleInputChange","value","ArticleItem","title","byline","section","abstract","ArticlesContainer","useState","articlesListData","setArticlesListData","articlesQueryData","setArticlesQueryData","isQueryActive","setIsQueryActive","useEffect","then","results","catch","error","console","log","length","content","map","article","index","created_date","event","searchData","filter","toLowerCase","includes","target","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPASaA,EAAoB,uCAAG,4BAAAC,EAAA,sEACXC,IAAMC,IAAN,UART,yDAQS,oBAPV,qCAMqB,cAC5BC,EAD4B,yBAG3BA,EAASC,MAHkB,2CAAH,qD,OCclBC,EAlBG,SAACC,GACjB,OACE,sBAAMC,KAAK,SAASC,SAAU,SAAAC,GAAC,OAAIA,EAAEC,kBAArC,SACE,qBAAKC,UAAU,cAAf,SACE,uBACEC,KAAK,OACLD,UAAU,eACV,aAAW,yBACXE,KAAMP,EAAMO,KACZC,YAAaR,EAAMQ,YACnBC,SAAUT,EAAMU,kBAChBC,MAAOX,EAAMW,aCWNC,EAtBG,SAACZ,GACnB,IACEa,EAIEb,EAJFa,MACAC,EAGEd,EAHFc,OACAC,EAEEf,EAFFe,QACAC,EACEhB,EADFgB,SAGF,OACE,oBAAIX,UAAU,8CAAd,SACE,gCACE,mBAAGA,UAAU,YAAb,SAA0BQ,IAC1B,4BAAIG,IACJ,8BACE,sBAAMX,UAAU,iBAAhB,SAAkCS,IADpC,MACsD,GACpD,sBAAMT,UAAU,YAAhB,SAA6BU,aC4EtBE,EAnFS,WAMxB,MAAgDC,mBAAS,IAAzD,mBAAOC,EAAP,KAAyBC,EAAzB,KACA,EAAkDF,mBAAS,IAA3D,mBAAOG,EAAP,KAA0BC,EAA1B,KACA,EAA0CJ,oBAAS,GAAnD,mBAAOK,EAAP,KAAsBC,EAAtB,KAUAC,qBAAU,WACRhC,IAAuBiC,MAAK,SAAC5B,GAE3BsB,EAAoBtB,EAAK6B,YACxBC,OAAM,SAACC,GAGRC,QAAQC,KAAI,QAEb,IAEH,IAgBIlC,EAAYwB,EAAkBW,OAA4BX,EAAnBF,EAGrCc,EAAUpC,EAASqC,KAAI,SAACC,EAASC,GACrC,OACE,cAAC,EAAD,CAEEvB,MAAOsB,EAAQtB,MACfC,OAAQqB,EAAQrB,OAChBC,QAASoB,EAAQpB,QACjBC,SAAUmB,EAAQnB,UALpB,UACUoB,EADV,cACqBD,EAAQE,kBASjC,OACE,sBAAKhC,UAAU,OAAf,UACE,cAAC,EAAD,CACEK,kBAlC2B,SAAC4B,GAChC,IAAIC,EAAapB,EAAiBqB,QAAO,SAACL,GACxC,OAAOA,EAAQtB,MAAM4B,cAAcC,SAASJ,EAAMK,OAAOhC,MAAM8B,gBAC7DN,EAAQrB,OAAO2B,cAAcC,SAASJ,EAAMK,OAAOhC,MAAM8B,gBACzDN,EAAQpB,QAAQ0B,cAAcC,SAASJ,EAAMK,OAAOhC,MAAM8B,kBAG1DF,EAAWP,QACbV,EAAqBiB,GACrBf,GAAiB,KAEjBF,EAAqB,IACrBE,GAAiB,KAuBfjB,KAAK,kBACLC,YAAY,oBAGdX,IAAa0B,GACb,oBAAIlB,UAAU,mCAAd,SACG4B,KAIFZ,EAAkBW,QAAUT,GAC7B,mBAAGlB,UAAU,mCAAb,6D,MC5ESuC,MARf,WACE,OACE,qBAAKvC,UAAU,iBAAf,SACE,cAAC,EAAD,OCKSwC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ec8bf5f5.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst baseURL = 'https://api.nytimes.com/svc/topstories/v2/science.json';\nconst apiKey = 'Gwxln5M3geWlhR6UE0TY1FUWKSG3wCil';\n\n/**\n * returns a list of articles\n */\n\nexport const getArticlesRequested = async () => {\n  const articles = await axios.get(`${baseURL}?api-key=${apiKey}`);\n\n  return articles.data;\n};\n","import React from 'react';\n\n/**\n * A simple search component\n */\nconst SearchBar = (props) => {\n  return (\n    <form role=\"search\" onSubmit={e => e.preventDefault()}>\n      <div className=\"input-group\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          aria-label=\"Enter your search term\"\n          name={props.name}\n          placeholder={props.placeholder}\n          onChange={props.handleInputChange}\n          value={props.value}\n        />\n      </div>\n    </form>\n  );\n};\n\nexport default SearchBar;\n","import React from 'react';\n\n/**\n * Returns a single Article Item\n */\nconst ArticleItem = (props) => {\n  const {\n    title,\n    byline,\n    section,\n    abstract\n  } = props;\n\n  return (\n    <li className=\"list-group-item border-end-0 border-start-0\">\n      <div>\n        <p className=\"fs-1 pt-2\">{title}</p>\n        <p>{abstract}</p>\n        <p>\n          <span className=\"text-secondary\">{byline}</span> | {''}\n          <span className=\"text-info\">{section}</span>\n        </p>\n      </div>\n    </li>\n  );\n  };\n  \n  export default ArticleItem;\n  ","import React, { useEffect, useState } from 'react';\n\n// apis\nimport { getArticlesRequested } from '../../apis/articles';\n\n// components\nimport SearchForm from '../shared/search-form';\nimport ArticleItem from '../feature/article';\n\n/**\n * Returns a list of articles.\n */\n\nconst ArticlesContainer = () => {\n  /**\n   * Local state storage\n   * \n   * https://reactjs.org/docs/hooks-state.html\n   */\n  const [articlesListData, setArticlesListData] = useState([]);\n  const [articlesQueryData, setArticlesQueryData] = useState([]);\n  const [isQueryActive, setIsQueryActive] = useState(false);\n\n  /**\n   * A lifecycle hook that only runs once\n   * when the component mounts.\n   * \n   * Gets a list of articles\n   * \n   * https://reactjs.org/docs/hooks-effect.html\n   */\n  useEffect(() => {\n    getArticlesRequested().then((data) => {\n\n      setArticlesListData(data.results);\n    }).catch((error) => {\n      // temp console log but ideally we would want\n      // an error UI of some sort\n      console.log(false);\n    });\n  }, []);\n\n  const handleSearchInputChange = ((event) => {\n    let searchData = articlesListData.filter((article) => {\n      return article.title.toLowerCase().includes(event.target.value.toLowerCase()) || \n        article.byline.toLowerCase().includes(event.target.value.toLowerCase()) ||\n        article.section.toLowerCase().includes(event.target.value.toLowerCase());\n    });\n\n    if (searchData.length) {\n      setArticlesQueryData(searchData);\n      setIsQueryActive(false);\n    } else {\n      setArticlesQueryData([]);\n      setIsQueryActive(true);\n    }\n  });\n\n  let articles = !articlesQueryData.length ? articlesListData : articlesQueryData;\n\n  // Maps articles and returns an article list item\n  const content = articles.map((article, index) => {\n    return ( \n      <ArticleItem\n        key={`${index} - ${article.created_date}`}\n        title={article.title}\n        byline={article.byline}\n        section={article.section}\n        abstract={article.abstract}\n      />\n    )\n  });\n\n  return (\n    <div className=\"mt-5\">\n      <SearchForm\n        handleInputChange={handleSearchInputChange}\n        name=\"articles-search\"\n        placeholder=\"Search articles\"\n      />\n    \n    { articles && !isQueryActive &&\n      <ul className=\"mt-5 list-group list-group-flush\">\n        {content}\n      </ul>\n    }\n\n    { !articlesQueryData.length && isQueryActive &&\n      <p className=\"mt-5 list-group list-group-flush\">\n        We couldn't find what you were looking for.\n      </p>\n    }\n    </div>\n  );\n};\n\n  export default ArticlesContainer;\n","import ArticlesContainer from './components/container/articles';\n\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"container w-50\">\n      <ArticlesContainer />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}